



_______________



_______________



_______________

-- условие в on и where
WITH
    splited_orders AS(
        SELECT
            order_id,
            creation_time,
            UNNEST (product_ids) product_id
        FROM
            orders
        WHERE
            NOT EXISTS (SELECT *
                        FROM user_actions
                        WHERE action = 'cancel_order'
                                AND orders.order_id = user_actions.order_id)
    )


SELECT
    *
FROM
    splited_orders so
    LEFT JOIN products p
        ON so.product_id = p.product_id
            and price < 100
WHERE
    order_id < 8

EXCEPT

SELECT
    *
FROM
    splited_orders so
    LEFT JOIN products p
        ON so.product_id = p.product_id
WHERE
    order_id < 8
    and price < 100

_______________

-- кубик по континентам и субконтинента
SELECT
  geoNetwork.continent,
  geoNetwork.subContinent,
  COUNT(*) cnt
FROM
  `bigquery-public-data.google_analytics_sample.ga_sessions_20170801`
GROUP BY
  CUBE (1, 2)
ORDER BY
  cnt desc
LIMIT
  10

_______________

SELECT
    timestamp_seconds(1800000000)
-- будет 2027-01-15 08:00:00 UTC

_______________

-- создание времени из int64: 1501591568
SELECT
    timestamp_seconds(visitStartTime)
FROM
    `bigquery-public-data.google_analytics_sample.ga_sessions_20170801`
LIMIT
  10

_______________

-- создание даты из стринга типа "20170801"
SELECT
    DATE(LEFT(date, 4) || '-' || SUBSTRING(date, 5, 2) || '-' || RIGHT(date, 2))
FROM
    `bigquery-public-data.google_analytics_sample.ga_sessions_20170801`
LIMIT
  10

_______________

-- кумулятивная сумма продаж за один час
SELECT
    sale_time,
    SUM(money) OVER (
        ORDER BY sale_time
        RANGE BETWEEN INTERVAL '1' HOUR PRECEDING AND CURRENT ROW
    ) AS rolling_sum_last_hour
FROM
    final_project_check

_______________

SELECT
    country_code,
    status,
    COUNT(*)
FROM
    merchants
GROUP BY CUBE (
    country_code,
    status
)
вернет все сочетания кодов и статусов, а так же итоги по всем кодам, по всем статусам и общий итого по таблице

GROUP BY GROUPING SETS(
    country_code,
    status
)
вернет только итоги по всем кодам и по всем статусам

GROUP BY ROLLUP(
    country_code,
    status
)
вернет только все итоги для сочетаний, «убирая» поля с конца, т.е. для код-статусов, для кодов и общий итог (не выводя строчек для итогов по статусам)

_______________

Для тренировки таблички, чтобы не объявлять их явно, можно создавать в виде CTEшек:
with checks as (
  SELECT 1 as id_check, '2025-01-10 09:32:17' as check_date UNION
  SELECT 1, '2025-01-10 09:32:17' UNION
  SELECT 1, '2025-01-10 09:32:17'
)
SELECT
  id_check,
  TIME(check_date)
FROM
  checks

_______________

-- pivot table пол * действие * количество
SELECT
    sex,
    COUNT(action) FILTER (WHERE action = 'create_order') create_number,
    COUNT(action) FILTER (WHERE action = 'cancel_order') cancel_number
FROM
    user_actions
    INNER JOIN users USING(user_id)
GROUP BY
    sex

_______________

-- unpivot таблицу пол * действие * количество
SELECT sex, 'create_order' AS action, create_number FROM wide_table
UNION
SELECT sex, 'cancel_order'          , cancel_number FROM wide_table
