https://itresume.ru/problems?tags=SQL&page=1&complexity=2

[Тестовое OZON] Количество клиентов, купивших товар в определенную дату
SELECT
  COUNT(user_id) cnt_users
FROM
  ozon.purchases
WHERE
  sku_id = 2
  AND created_at = '2023-10-01'


[Тестовое OZON] Количество людей из Москвы, купивших телефоны в сентябре и октябре
SELECT
  TO_CHAR(p.created_at, 'Month') AS month,
  COUNT(DISTINCT p.user_id) cnt_people
FROM
  ozon.purchases p
  INNER JOIN ozon.users u ON u.id = p.user_id
  INNER JOIN ozon.skus s ON p.sku_id = s.id
WHERE
  u.city = 'Москва'
  AND s.category = 'Телефон'
  AND p.created_at BETWEEN '2023-09-01' AND '2023-10-31'
GROUP BY
  month
ORDER BY
  cnt_people DESC


[Тестовое Альфа-банк] Покупки телефонов в Туле по месяцам
SELECT
  TRIM(TO_CHAR(created_at, 'month')) as month,
  COUNT(DISTINCT p.user_id) people
FROM
  Purchases p
  INNER JOIN SKUS s ON (p.sku_id = s.id)
  INNER JOIN Customer c ON (c.ID_CUSTOMER = p.user_id)
WHERE
  c.TOWN = 'Tula'
  AND s.category = 2
GROUP BY
  month
ORDER BY
  people DESC


[Тестовое Альфа-банк] Покупки товара после 10 октября
SELECT
  COUNT(DISTINCT user_id)
FROM
  Purchases
WHERE
  created_at >= '2021-10-10'
  AND sku_id = 5


[ Тестовое СБЕР ] Изменение пикового значения
WITH
  all_dates AS (
    SELECT
      dt
    FROM
      generate_series(
          '2022-01-01'::date,
          '2022-01-01'::date + INTERVAL '110 day',
          '1 day'
      ) AS dt
  ),

  day_reg AS (
    SELECT
      date_joined::date dt,
      COUNT(*) cnt
  FROM
    users
  GROUP BY
    1
  ),

  day_cnt AS (
    SELECT
      dt,
      cnt
    FROM
      all_dates
      LEFT JOIN day_reg USING (dt)
  ),

  max_cnt AS (
    SELECT
      dt,
      cnt,
      MAX(cnt) OVER (ORDER BY dt) max_cnt
    FROM
      day_cnt
  )

SELECT
  dt,
  cnt,
  max_cnt,
  COALESCE(cnt, 0) - max_cnt diff
FROM
  max_cnt


[Тестовое Тинькофф] Информация о счетах клиентов
SELECT
  EXTRACT(MONTH FROM date) AS month,
  COUNT(DISTINCT customer_id)
      FILTER(WHERE acount_status IN ('новый', 'активирован', 'утилизирован')) working,
  COUNT(DISTINCT customer_id)
      FILTER(WHERE acount_status IN ('заблокирован', 'закрыт')) non_working
FROM
  tinkoff.account_statuses
GROUP BY
  month


[Тестовое Тинькофф] Недозвонившиеся клиенты
SELECT
  start_dttm date,
  last_nm,
  first_nm,
  middle_nm
FROM
  tinkoff.Calls cll
  LEFT JOIN tinkoff.Customers cst USING (customer_id)
WHERE
  cll.dozv_flg = 0
  AND start_dttm = '2019-05-29'


[Тестовое Тинькофф] Продажи во время звонка
SELECT
  last_nm,
  first_nm,
  middle_nm,
  start_dttm date,
  open_dt,
  product_nm
FROM
  tinkoff.Calls cll
  LEFT JOIN tinkoff.Customers cst USING (customer_id)
WHERE
  dozv_flg = 1
  AND start_dttm >= '2020-10-05'
  AND start_dttm = open_dt


[Тестовое Тинькофф] Процент дозвона
SELECT
  start_dttm::DATE date,
  1.0 * COUNT(*) FILTER(WHERE dozv_flg = 1) / COUNT(*) sla
FROM
  tinkoff.Calls
WHERE
  start_dttm >= '2020-10-01'
GROUP BY
  date


Анализы с нечетным ID и заданной себестоимостью
SELECT
  an_id,
  an_name,
  an_cost
FROM
  Analysis
WHERE
  MOD(an_id, 2) = 1
  AND an_cost > 100


Группа продаж в течение последнего года
SELECT
  ord_an an_id,
  COUNT(ord_an),
  CASE
    WHEN COUNT(ord_an) > 20 THEN 2
    WHEN COUNT(ord_an) > 10 THEN 1
    ELSE 0
   END gr
FROM
  Orders
WHERE
  ord_datetime BETWEEN '2019-03-01' AND '2020-03-01'
GROUP BY
  an_id
ORDER BY
  an_id


Наименее заказываемая группа
WITH cnt AS (
  SELECT
    g.gr_name,
    COUNT(o.ord_id) ord_count
  FROM
    Orders o
    INNER JOIN Analysis a ON (o.ord_an = a.an_id)
    INNER JOIN Groups g ON (a.an_group = g.gr_id)
  GROUP BY
    g.gr_name
)

SELECT
  gr_name
FROM
  cnt
WHERE
  ord_count = (SELECT min(ord_count) FROM cnt)


Найти ID с самым большим количеством заказов по годам
WITH annual_orders AS (
  SELECT
    EXTRACT(YEAR FROM ord.ord_datetime)::VARCHAR AS year,
    anl.an_id,
    COUNT(DISTINCT ord_id) cnt
  FROM
    Analysis anl
    INNER JOIN Orders ord ON (anl.an_id = ord.ord_an)
  GROUP BY
    year,
    an_id
)

SELECT
  *
FROM
  annual_orders
WHERE
  (year, cnt) IN (SELECT year, MAX(cnt) FROM annual_orders GROUP BY year)
ORDER BY
  year,
  an_id


Найти все пары различных клиентов
WITH moscow_people AS (
  SELECT
    FIRST_NAME
  FROM
    CUSTOMER
  WHERE
    TOWN = 'Moscow'
)

SELECT
  c1.FIRST_NAME customer1,
  c2.FIRST_NAME customer2
FROM
  moscow_people c1,
  moscow_people c2
WHERE
  c1.FIRST_NAME != c2.FIRST_NAME


Найти округа, в которых не было покупок
WITH FAR_COUNTY AS (
  SELECT
    COUNTY_CODE
  FROM
    COUNTY

  EXCEPT

  SELECT
    DISTINCT COUNTY_CODE
  FROM
    C_ORDERS
    INNER JOIN CUSTOMER USING(ID_CUSTOMER)
)

SELECT
  NAME AS name
FROM
  FAR_COUNTY
  INNER JOIN COUNTY USING (COUNTY_CODE)


Не менее трех значений подряд
SELECT
  DISTINCT l1.num ConsecutiveNums
FROM
  Logs l1
  INNER JOIN Logs l2 ON (l2.id = l1.id + 1)
  INNER JOIN Logs l3 ON (l3.id = l1.id + 2)
WHERE
  l1.num = l2.num
  AND l1.num = l3.num
ORDER BY
  ConsecutiveNums DESC


Нумерация строк по дате
SELECT
  ord_datetime::DATE dt,
  ord_datetime,
  ord_id,
  ord_an,
  ROW_NUMBER() OVER(PARTITION BY ord_datetime::DATE ORDER BY ord_datetime DESC)
FROM
  Orders


Отфильтрованные продажи в период дат
SELECT
  LEFT(CAST(ord_datetime AS VARCHAR), 10) ord_date,
  COUNT(*) cnt
FROM
  Orders
WHERE
  ord_datetime BETWEEN '2019-10-25' AND '2019-11-02'
GROUP BY
  ord_date
HAVING
  COUNT(*) > 5
ORDER BY
  ord_date


Поведение клиентов
SELECT
  id_customer,
  ROUND(SUM(total_price))::INTEGER total_sales,
  ROUND(AVG(quantity), 2) avg_quantity,
  MAX(date_order) recent_order_date
FROM
    C_ORDERS
    INNER JOIN ORDER_DETAILS USING (ID_ORDERS)
GROUP BY
  id_customer
ORDER BY
  total_sales DESC


Помесячный прирост продаж с разбивкой по группе
WITH cnt AS (
  SELECT
    EXTRACT(YEAR FROM o.ord_datetime) AS year,
    EXTRACT(MONTH FROM o.ord_datetime) AS month,
    g.gr_id AS grp,
    COUNT(*) cnt
  FROM
    Orders o
    INNER JOIN Analysis a ON (o.ord_an = a.an_id)
    INNER JOIN Groups g ON (a.an_group = g.gr_id)
  GROUP BY
    1, 2, 3
)

SELECT
  year::VARCHAR,
  CASE
    WHEN month < 10 THEN '0'
    ELSE ''
  END
  || month::VARCHAR AS month,
  grp AS group,
  (SUM(cnt) OVER (PARTITION BY grp, year ORDER BY month))::INTEGER
FROM
  cnt
ORDER BY
  3, 1, 2


Продажи анализов в течение недели
SELECT
  an_name,
  an_cost,
  ord_datetime
FROM
  Orders ord
  INNER JOIN Analysis anl ON ord.ord_an = anl.an_id
WHERE
  ord_datetime BETWEEN '2020-02-05' AND '2020-02-12'
ORDER BY
  ord_datetime,
  an_cost


Продажи за 2019 и 2020
SELECT
  anl.an_id an,
  COUNT(ord_datetime) FILTER (WHERE EXTRACT('YEAR' FROM ord_datetime) = 2019) year2019,
  COUNT(ord_datetime) FILTER (WHERE EXTRACT('YEAR' FROM ord_datetime) = 2020) year2020
FROM
  Analysis anl
  INNER JOIN Orders ord ON (anl.an_id = ord.ord_an)
GROUP BY
  an
ORDER BY
  an


Проранжировать баллы
SELECT
  Score score,
  DENSE_RANK() OVER(ORDER BY Score DESC) rnk
FROM
  Scores


Расположение студентов после пересадки
SELECT
  seat,
  CASE
    WHEN seat  = (SELECT MAX(seat) FROM Students) AND SEAT % 2 = 1 THEN name
    WHEN SEAT % 2 = 1 THEN LEAD(name) OVER ()
    ELSE LAG(name) OVER ()
  END AS name
FROM
  Students


Режим хранения анализов
SELECT
  ord.ord_id,
  ord.ord_an,
  anl.an_name,
  grp.gr_temp
FROM
  Orders ord
  INNER JOIN Analysis anl ON ord.ord_an = anl.an_id
  INNER JOIN Groups grp ON anl.an_group = grp.gr_id
WHERE
  grp.gr_temp = 22
ORDER BY
  ord.ord_id


Рост продаж по сравнению с предыдущим днем
WITH
  date_revenue as (
    SELECT
      date,
      SUM(value) as value
    FROM
      sales
   GROUP BY DATE
  ),

  lags as (
    SELECT
      date,
      value,
      COALESCE(LAG(value) OVER(ORDER BY date), 0) lg
    FROM
      date_revenue
  )

SELECT
  *
FROM
  lags
WHERE
  value > lg
ORDER BY
  date


Фиксация входа-выхода сотрудников
SELECT
  employee,
  check_time::VARCHAR,
  sum::VARCHAR
FROM
  (
    SELECT
      g1.employee,
      g2.check_time::DATE,
      g2.check_time - g1.check_time AS sum
    FROM
      gate g1
      INNER JOIN gate g2 ON(
          g1.employee = g2.employee
          AND g1.check_time::DATE = g2.check_time::DATE
          AND g1.is_entered IS true
          AND g2.is_entered IS false
    )
  ) q
WHERE
  EXTRACT(EPOCH FROM sum) / 60 / 60 < 8
ORDER BY
  employee


Фильтрация по нескольким условиям
SELECT
  an_name,
  an_price
FROM
  Analysis
WHERE
  (LOWER(an_name) LIKE '%anti%'
   OR LOWER(an_name) LIKE '%кровь%')
  AND an_price < 1000
ORDER BY
  an_price DESC

